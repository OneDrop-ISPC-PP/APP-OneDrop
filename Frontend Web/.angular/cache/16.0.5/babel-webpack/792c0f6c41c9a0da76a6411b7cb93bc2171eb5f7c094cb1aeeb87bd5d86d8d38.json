{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EstadisAdminsService {\n  constructor(http) {\n    this.http = http;\n    //////////   URLS  --  solo hay que descomentar una y comentar la otra  //////////\n    //////////   URLS  --  solo hay que descomentar una y comentar la otra  //////////\n    //////////   URLS  --  solo hay que descomentar una y comentar la otra  //////////\n    // URL DE SERVICIOS:\n    //url_SERVICIOS:string=\"http://localhost:8000/api/admin/servicios/\";\n    this.url_SERVICIOS = \"http://localhost:3000/SERVICIOS/\";\n    // URL DE PACIENTES:\n    //url_PACIENTES:string='http://localhost:8000/api/paciente/'\n    this.url_PACIENTES = \"http://localhost:3000/REGISTRO_DATOS_PERSONALES/\";\n    // URL GENERAL DEL FRONT (TRANQUI DAVID):\n    this.url = \"http://localhost:3000/\";\n  }\n  // METODO QUE MUESTRA USUARIOS\n  muestraUsuarios() {\n    return this.http.get(this.url_PACIENTES, {\n      withCredentials: true\n    });\n  }\n  // METODO QUE MUESTRA LOS SERVICIOS \n  muestraServicios() {\n    return this.http.get(this.url_SERVICIOS, {\n      withCredentials: true\n    });\n  }\n  // METODO POST DE SERVICIOS\n  POSTRegistroServicio(body) {\n    return this.http.post(this.url_SERVICIOS, body, {\n      withCredentials: true\n    });\n  }\n  // METODO PARA ELIMINAR SERVICIOS\n  DELETE(id) {\n    return this.http.delete(this.url_SERVICIOS + id, {\n      withCredentials: true\n    });\n  }\n  ///// MODIFICAR SERVICIOS /////\n  // metodo para TRAER la informacion\n  modificar(id) {\n    return this.http.get(this.url_SERVICIOS + id, {\n      withCredentials: true\n    });\n  }\n  // metodo para MODIFICAR la informacion\n  modificar2(datos, id) {\n    return this.http.put(this.url_SERVICIOS + id, datos, {\n      withCredentials: true\n    });\n  }\n  /////////// METODOS QUE MUESTRAN COSAS QUE NO TENEMOS POR AHORA ////////////\n  /////////// METODOS QUE MUESTRAN COSAS QUE NO TENEMOS POR AHORA ////////////\n  /////////// METODOS QUE MUESTRAN COSAS QUE NO TENEMOS POR AHORA ////////////\n  muestraEstadisticas() {\n    return this.http.get(this.url + \"estadisticas_admins\", {\n      withCredentials: true\n    });\n  }\n  /////////////////////////////////////\n  muestraComorbilidades() {\n    return this.http.get(this.url + \"estadisticas_comorbilidades_admins\", {\n      withCredentials: true\n    });\n  }\n  /////////////////////////////////////\n  muestraIngresos() {\n    return this.http.get(this.url + \"ingresos_admins\", {\n      withCredentials: true\n    });\n  }\n}\nEstadisAdminsService.ɵfac = function EstadisAdminsService_Factory(t) {\n  return new (t || EstadisAdminsService)(i0.ɵɵinject(i1.HttpClient));\n};\nEstadisAdminsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EstadisAdminsService,\n  factory: EstadisAdminsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["EstadisAdminsService","constructor","http","url_SERVICIOS","url_PACIENTES","url","muestraUsuarios","get","withCredentials","muestraServicios","POSTRegistroServicio","body","post","DELETE","id","delete","modificar","modificar2","datos","put","muestraEstadisticas","muestraComorbilidades","muestraIngresos","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\mrtdh\\OneDrive\\Escritorio\\Estudio\\01-Tecnicatura\\REPOSITORIO\\a36g36\\Documentacion\\Maqueta 2023\\Front\\src\\app\\servicios\\estadis-admins.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EstadisAdminsService {\r\n  \r\n  constructor(\r\n    private http:HttpClient\r\n    ) { }\r\n  //////////   URLS  --  solo hay que descomentar una y comentar la otra  //////////\r\n  //////////   URLS  --  solo hay que descomentar una y comentar la otra  //////////\r\n  //////////   URLS  --  solo hay que descomentar una y comentar la otra  //////////\r\n    \r\n  // URL DE SERVICIOS:\r\n  //url_SERVICIOS:string=\"http://localhost:8000/api/admin/servicios/\";\r\n  url_SERVICIOS:string=\"http://localhost:3000/SERVICIOS/\";\r\n\r\n  // URL DE PACIENTES:\r\n  //url_PACIENTES:string='http://localhost:8000/api/paciente/'\r\n  url_PACIENTES:string=\"http://localhost:3000/REGISTRO_DATOS_PERSONALES/\"\r\n\r\n  // URL GENERAL DEL FRONT (TRANQUI DAVID):\r\n  url:string=\"http://localhost:3000/\"\r\n\r\n  \r\n\r\n  // METODO QUE MUESTRA USUARIOS\r\n muestraUsuarios( ){\r\n   return this.http.get(this.url_PACIENTES, {withCredentials: true})\r\n  }\r\n    \r\n  // METODO QUE MUESTRA LOS SERVICIOS \r\n  muestraServicios( ){\r\n    return this.http.get(this.url_SERVICIOS, {withCredentials: true})\r\n  }\r\n\r\n  // METODO POST DE SERVICIOS\r\n  POSTRegistroServicio(body: any){\r\n    return this.http.post(this.url_SERVICIOS,body, {withCredentials: true})\r\n  }\r\n\r\n  // METODO PARA ELIMINAR SERVICIOS\r\n  DELETE(id:string){\r\n    return this.http.delete(this.url_SERVICIOS+id, {withCredentials: true})\r\n  }\r\n\r\n  ///// MODIFICAR SERVICIOS /////\r\n  // metodo para TRAER la informacion\r\n  modificar(id:number){\r\n    return this.http.get(this.url_SERVICIOS+id, {withCredentials: true})\r\n  }\r\n\r\n  // metodo para MODIFICAR la informacion\r\n  modificar2(datos:any, id:number){\r\n    return this.http.put(this.url_SERVICIOS+id,datos, {withCredentials: true})\r\n  }\r\n\r\n\r\n/////////// METODOS QUE MUESTRAN COSAS QUE NO TENEMOS POR AHORA ////////////\r\n/////////// METODOS QUE MUESTRAN COSAS QUE NO TENEMOS POR AHORA ////////////\r\n/////////// METODOS QUE MUESTRAN COSAS QUE NO TENEMOS POR AHORA ////////////\r\n\r\n  muestraEstadisticas( ){\r\n    return this.http.get(this.url+\"estadisticas_admins\", {withCredentials: true})\r\n  }\r\n\r\n/////////////////////////////////////\r\n  muestraComorbilidades( ){\r\n    return this.http.get(this.url+\"estadisticas_comorbilidades_admins\", {withCredentials: true})\r\n  }\r\n  /////////////////////////////////////\r\n  muestraIngresos( ){\r\n    return this.http.get(this.url+\"ingresos_admins\", {withCredentials: true})\r\n  }\r\n\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,oBAAoB;EAE/BC,YACUC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAEd;IACA;IACA;IAEA;IACA;IACA,KAAAC,aAAa,GAAQ,kCAAkC;IAEvD;IACA;IACA,KAAAC,aAAa,GAAQ,kDAAkD;IAEvE;IACA,KAAAC,GAAG,GAAQ,wBAAwB;EAd7B;EAkBN;EACDC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,IAAI,CAACH,aAAa,EAAE;MAACI,eAAe,EAAE;IAAI,CAAC,CAAC;EAClE;EAEA;EACAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAC,IAAI,CAACJ,aAAa,EAAE;MAACK,eAAe,EAAE;IAAI,CAAC,CAAC;EACnE;EAEA;EACAE,oBAAoBA,CAACC,IAAS;IAC5B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,aAAa,EAACQ,IAAI,EAAE;MAACH,eAAe,EAAE;IAAI,CAAC,CAAC;EACzE;EAEA;EACAK,MAAMA,CAACC,EAAS;IACd,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAC,IAAI,CAACZ,aAAa,GAACW,EAAE,EAAE;MAACN,eAAe,EAAE;IAAI,CAAC,CAAC;EACzE;EAEA;EACA;EACAQ,SAASA,CAACF,EAAS;IACjB,OAAO,IAAI,CAACZ,IAAI,CAACK,GAAG,CAAC,IAAI,CAACJ,aAAa,GAACW,EAAE,EAAE;MAACN,eAAe,EAAE;IAAI,CAAC,CAAC;EACtE;EAEA;EACAS,UAAUA,CAACC,KAAS,EAAEJ,EAAS;IAC7B,OAAO,IAAI,CAACZ,IAAI,CAACiB,GAAG,CAAC,IAAI,CAAChB,aAAa,GAACW,EAAE,EAACI,KAAK,EAAE;MAACV,eAAe,EAAE;IAAI,CAAC,CAAC;EAC5E;EAGF;EACA;EACA;EAEEY,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAAClB,IAAI,CAACK,GAAG,CAAC,IAAI,CAACF,GAAG,GAAC,qBAAqB,EAAE;MAACG,eAAe,EAAE;IAAI,CAAC,CAAC;EAC/E;EAEF;EACEa,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACnB,IAAI,CAACK,GAAG,CAAC,IAAI,CAACF,GAAG,GAAC,oCAAoC,EAAE;MAACG,eAAe,EAAE;IAAI,CAAC,CAAC;EAC9F;EACA;EACAc,eAAeA,CAAA;IACb,OAAO,IAAI,CAACpB,IAAI,CAACK,GAAG,CAAC,IAAI,CAACF,GAAG,GAAC,iBAAiB,EAAE;MAACG,eAAe,EAAE;IAAI,CAAC,CAAC;EAC3E;;AArEWR,oBAAoB,C;mBAApBA,oBAAoB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAApB1B,oBAAoB,C;SAApBA,oBAAoB;EAAA2B,OAAA,EAApB3B,oBAAoB,CAAA4B,IAAA;EAAAC,UAAA,EAFnB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}