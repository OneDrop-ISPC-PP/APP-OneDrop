{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/servicios/estadis-usuarios.service\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class ModNotaUsuarioComponent {\n  //////////////////////////////////////////////////////////////////\n  constructor(routerAct, router, serv_estadistica) {\n    this.routerAct = routerAct;\n    this.router = router;\n    this.serv_estadistica = serv_estadistica;\n  }\n  //////////////////////////////////////////////////////////////////\n  ngOnInit() {\n    this.routerAct.paramMap.subscribe(param => {\n      this.dataid = param['get'](\"id\");\n      console.log(\"El id es:\" + this.dataid);\n    });\n    this.serv_estadistica.modificar(this.dataid).subscribe(data => {\n      this.nota = data;\n    });\n  }\n  ///////////////////////////////////////////////////////////////\n  update() {\n    this.serv_estadistica.modificar2(this.nota, this.dataid).subscribe(() => {\n      this.router.navigate([\"auth/dash_user\"]);\n    });\n  }\n}\nModNotaUsuarioComponent.ɵfac = function ModNotaUsuarioComponent_Factory(t) {\n  return new (t || ModNotaUsuarioComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.EstadisUsuariosService));\n};\nModNotaUsuarioComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ModNotaUsuarioComponent,\n  selectors: [[\"app-mod-nota-usuario\"]],\n  decls: 17,\n  vars: 6,\n  consts: [[1, \"form-register\", \"bg-light\"], [1, \"titulo\", \"text-center\"], [1, \"p-4\", \"container\"], [1, \"row\"], [1, \"p-2\", \"col-lg-6\"], [\"for\", \"valor-glucemia\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"valor-glucemia\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [1, \"p-2\", \"col-lg-12\"], [1, \"form-label\"], [\"name\", \"\", \"id\", \"\", \"cols\", \"30\", \"rows\", \"5\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"m-1\", \"col-lg-4\", \"btn\", \"btn-success\", 3, \"click\"], [\"routerLink\", \"/auth/dash_user\", \"type\", \"submit\", 1, \"m-1\", \"col-lg-4\", \"btn\", \"btn-danger\"]],\n  template: function ModNotaUsuarioComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"EDITAR REGISTRO\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Valor Glucemia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function ModNotaUsuarioComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.nota.valor_glucemia = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Comentario del registro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"textarea\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function ModNotaUsuarioComponent_Template_textarea_ngModelChange_12_listener($event) {\n        return ctx.nota.comentario_registro = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function ModNotaUsuarioComponent_Template_button_click_13_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵtext(14, \"Modificar Nota\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 11);\n      i0.ɵɵtext(16, \"Volver\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.nota.valor_glucemia)(\"ngModelOptions\", i0.ɵɵpureFunction0(4, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.nota.comentario_registro)(\"ngModelOptions\", i0.ɵɵpureFunction0(5, _c0));\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i1.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ModNotaUsuarioComponent","constructor","routerAct","router","serv_estadistica","ngOnInit","paramMap","subscribe","param","dataid","console","log","modificar","data","nota","update","modificar2","navigate","i0","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","EstadisUsuariosService","selectors","decls","vars","consts","template","ModNotaUsuarioComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ModNotaUsuarioComponent_Template_input_ngModelChange_8_listener","$event","valor_glucemia","ModNotaUsuarioComponent_Template_textarea_ngModelChange_12_listener","comentario_registro","ModNotaUsuarioComponent_Template_button_click_13_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\mrtdh\\OneDrive\\Escritorio\\Estudio\\01-Tecnicatura\\REPOSITORIO\\a36g36\\Documentacion\\Maqueta 2023\\Front\\src\\app\\auth\\mod-nota-usuario\\mod-nota-usuario.component.ts","C:\\Users\\mrtdh\\OneDrive\\Escritorio\\Estudio\\01-Tecnicatura\\REPOSITORIO\\a36g36\\Documentacion\\Maqueta 2023\\Front\\src\\app\\auth\\mod-nota-usuario\\mod-nota-usuario.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router,Params } from '@angular/router';\r\nimport { EstadisUsuariosService } from 'src/app/servicios/estadis-usuarios.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-mod-nota-usuario',\r\n  templateUrl: './mod-nota-usuario.component.html',\r\n  styleUrls: ['./mod-nota-usuario.component.css']\r\n})\r\nexport class ModNotaUsuarioComponent implements OnInit {\r\n  dataid!: number;\r\n  nota:any;\r\n\r\n\r\n//////////////////////////////////////////////////////////////////\r\n  constructor(\r\n    private routerAct: ActivatedRoute,\r\n    private router: Router,\r\n    private serv_estadistica:EstadisUsuariosService\r\n\r\n  ){}\r\n\r\n//////////////////////////////////////////////////////////////////\r\n  ngOnInit(): void {\r\n    this.routerAct.paramMap.subscribe((param:Params) =>{\r\n      this.dataid=param['get'](\"id\");\r\n      console.log(\"El id es:\"+this.dataid);\r\n\r\n    })\r\n\r\n    this.serv_estadistica.modificar(this.dataid).subscribe((data)=>{\r\n      this.nota=data;\r\n\r\n    })\r\n\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////\r\n  update(){\r\n    this.serv_estadistica.modificar2(this.nota,this.dataid).subscribe(()=>{\r\n      this.router.navigate([\"auth/dash_user\"])\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n ","\r\n<form class=\"form-register  bg-light\">\r\n    <h2 class=\"titulo text-center\">EDITAR REGISTRO</h2>\r\n  <div class=\"p-4 container\">\r\n    <div class=\"row\">\r\n      <div class=\"p-2  col-lg-6\">\r\n        <label for=\"valor-glucemia\" class=\"form-label\">Valor Glucemia</label>\r\n        <input [(ngModel)]=\"nota.valor_glucemia\"  [ngModelOptions]=\"{standalone: true}\" type=\"number\" class=\"form-control\" id=\"valor-glucemia\">\r\n      </div>\r\n\r\n      <div class=\"p-2 col-lg-12\">\r\n        <label class=\"form-label\">Comentario del registro</label>\r\n        <textarea [(ngModel)]=\"nota.comentario_registro\"  [ngModelOptions]=\"{standalone: true}\" name=\"\" id=\"\" cols=\"30\" rows=\"5\"\r\n          class=\"form-control\"></textarea>\r\n      </div>\r\n\r\n      <button (click)=\"update()\" type=\"submit\" class=\"m-1 col-lg-4 btn btn-success\">Modificar Nota</button>\r\n      <button routerLink=\"/auth/dash_user\" type=\"submit\" class=\"m-1 col-lg-4 btn btn-danger\">Volver</button>\r\n      \r\n    </div>\r\n   \r\n  </div>\r\n</form>\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}