{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EstadisUsuariosService {\n  constructor(http) {\n    this.http = http;\n    //////////   URLS  --  solo hay que descomentar una y comentar la otra  //////////\n    //////////   URLS  --  solo hay que descomentar una y comentar la otra  //////////\n    //////////   URLS  --  solo hay que descomentar una y comentar la otra  //////////\n    // URL DE NOTAS:\n    //url_NOTAS:string='http://localhost:8000/api/paciente/registros_glucemia/';\n    this.url_NOTAS = 'http://localhost:3000/notas_usuarios/';\n    // URL DE SERVICIOS:\n    //url_SERVICIOS:string='http://localhost:8000/api/paciente/servicios/';\n    this.url_SERVICIOS = 'http://localhost:3000/SERVICIOS/';\n    // URL DE CARRITO:\n    //url_CARRITO:string=\"http://localhost:8000/api/paciente/carrito/\";\n    this.url_CARRITO = \"http://localhost:3000/CARRITO/\";\n  }\n  ///////////////////////////////////////////////////\n  ////////////////// CODIGO NOTAS ///////////////////\n  ///////////////////////////////////////////////////  \n  //// MUESTRA LAS NOTAS  \n  muestraNotasUsuario() {\n    return this.http.get(this.url_NOTAS, {\n      withCredentials: true\n    });\n  }\n  //// AGREGA NOTAS\n  nuevaNota(datos) {\n    return this.http.post(this.url_NOTAS, datos, {\n      withCredentials: true\n    });\n  }\n  //// MODIFICAR NOTAS\n  // metodo para TRAER la informacion\n  modificar(id) {\n    return this.http.get(this.url_NOTAS + id, {\n      withCredentials: true\n    });\n  }\n  // metodo para MODIFICAR la informacion\n  modificar2(datos, id) {\n    return this.http.put(this.url_NOTAS + id, datos, {\n      withCredentials: true\n    });\n  }\n  // metodo para ELIMINAR la informacion\n  DELETE(id) {\n    return this.http.delete(this.url_NOTAS + id, {\n      withCredentials: true\n    });\n  }\n  /////////////////////////////////////////////////////////\n  ////////////////// CODIGO DEL CARRITO ///////////////////\n  /////////////////////////////////////////////////////////\n  //// MUESTRA LOS SERVICIOS DISPONIBLES A LOS USUARIOS ////\n  muestraServicioAUsuario() {\n    return this.http.get(this.url_SERVICIOS, {\n      withCredentials: true\n    });\n  }\n  //// MUESTRA CARRITO USUARIOS ////\n  muestraCarritoAUsuario() {\n    return this.http.get(this.url_CARRITO, {\n      withCredentials: true\n    });\n  }\n  //// AGREGA SERVICIO AL CARRITO ////\n  agregaAlCarrito(servicio) {\n    return this.http.post(this.url_CARRITO, servicio, {\n      withCredentials: true\n    });\n  }\n  //// ELIMINA SERVICIO AL CARRITO ////\n  DELETE_SERV(id) {\n    return this.http.delete(this.url_CARRITO + id, {\n      withCredentials: true\n    });\n  }\n}\nEstadisUsuariosService.ɵfac = function EstadisUsuariosService_Factory(t) {\n  return new (t || EstadisUsuariosService)(i0.ɵɵinject(i1.HttpClient));\n};\nEstadisUsuariosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EstadisUsuariosService,\n  factory: EstadisUsuariosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["EstadisUsuariosService","constructor","http","url_NOTAS","url_SERVICIOS","url_CARRITO","muestraNotasUsuario","get","withCredentials","nuevaNota","datos","post","modificar","id","modificar2","put","DELETE","delete","muestraServicioAUsuario","muestraCarritoAUsuario","agregaAlCarrito","servicio","DELETE_SERV","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\mrtdh\\OneDrive\\Escritorio\\Estudio\\01-Tecnicatura\\REPOSITORIO\\a36g36\\Documentacion\\Maqueta 2023\\Front\\src\\app\\servicios\\estadis-usuarios.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n// INTERFACE DE NOTAS USUARIO\r\nimport { NotasGlucemia } from './interfaces/notas-glucemia';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EstadisUsuariosService {\r\n\r\n  constructor(\r\n    private http:HttpClient) { }\r\n\r\n  //////////   URLS  --  solo hay que descomentar una y comentar la otra  //////////\r\n  //////////   URLS  --  solo hay que descomentar una y comentar la otra  //////////\r\n  //////////   URLS  --  solo hay que descomentar una y comentar la otra  //////////\r\n  \r\n  // URL DE NOTAS:\r\n  //url_NOTAS:string='http://localhost:8000/api/paciente/registros_glucemia/';\r\n  url_NOTAS:string='http://localhost:3000/notas_usuarios/';\r\n\r\n  // URL DE SERVICIOS:\r\n  //url_SERVICIOS:string='http://localhost:8000/api/paciente/servicios/';\r\n  url_SERVICIOS:string='http://localhost:3000/SERVICIOS/';\r\n\r\n  // URL DE CARRITO:\r\n  //url_CARRITO:string=\"http://localhost:8000/api/paciente/carrito/\";\r\n  url_CARRITO:string=\"http://localhost:3000/CARRITO/\";\r\n\r\n\r\n\r\n  ///////////////////////////////////////////////////\r\n  ////////////////// CODIGO NOTAS ///////////////////\r\n  ///////////////////////////////////////////////////  \r\n  \r\n  //// MUESTRA LAS NOTAS  \r\n  muestraNotasUsuario( ){\r\n    return this.http.get(this.url_NOTAS, {withCredentials: true})\r\n  }\r\n\r\n  //// AGREGA NOTAS\r\n  nuevaNota(datos: any){\r\n    return this.http.post(this.url_NOTAS,datos, {withCredentials: true});\r\n  }\r\n\r\n  //// MODIFICAR NOTAS\r\n  // metodo para TRAER la informacion\r\n  modificar(id:number){\r\n    return this.http.get(this.url_NOTAS+id , {withCredentials: true})\r\n  }\r\n\r\n  // metodo para MODIFICAR la informacion\r\n  modificar2(datos:any, id:number){\r\n    return this.http.put(this.url_NOTAS+id,datos , {withCredentials: true})\r\n  }\r\n\r\n  // metodo para ELIMINAR la informacion\r\n  DELETE(id:string){\r\n    return this.http.delete(this.url_NOTAS+id , {withCredentials: true})\r\n  }\r\n\r\n\r\n  /////////////////////////////////////////////////////////\r\n  ////////////////// CODIGO DEL CARRITO ///////////////////\r\n  /////////////////////////////////////////////////////////\r\n\r\n  //// MUESTRA LOS SERVICIOS DISPONIBLES A LOS USUARIOS ////\r\n  muestraServicioAUsuario( ){\r\n    return this.http.get<NotasGlucemia[]>(this.url_SERVICIOS, {withCredentials: true})\r\n  }\r\n\r\n  //// MUESTRA CARRITO USUARIOS ////\r\n  muestraCarritoAUsuario(){\r\n    return this.http.get(this.url_CARRITO, {withCredentials: true})\r\n  }\r\n\r\n  //// AGREGA SERVICIO AL CARRITO ////\r\n  agregaAlCarrito(servicio:any){\r\n    return this.http.post(this.url_CARRITO,servicio , {withCredentials: true})\r\n  }\r\n\r\n  //// ELIMINA SERVICIO AL CARRITO ////\r\n  DELETE_SERV(id:string){\r\n    return this.http.delete(this.url_CARRITO+id , {withCredentials: true})\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":";;AAWA,OAAM,MAAOA,sBAAsB;EAEjCC,YACUC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAEd;IACA;IACA;IAEA;IACA;IACA,KAAAC,SAAS,GAAQ,uCAAuC;IAExD;IACA;IACA,KAAAC,aAAa,GAAQ,kCAAkC;IAEvD;IACA;IACA,KAAAC,WAAW,GAAQ,gCAAgC;EAhBtB;EAoB7B;EACA;EACA;EAEA;EACAC,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,IAAI,CAACJ,SAAS,EAAE;MAACK,eAAe,EAAE;IAAI,CAAC,CAAC;EAC/D;EAEA;EACAC,SAASA,CAACC,KAAU;IAClB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACR,SAAS,EAACO,KAAK,EAAE;MAACF,eAAe,EAAE;IAAI,CAAC,CAAC;EACtE;EAEA;EACA;EACAI,SAASA,CAACC,EAAS;IACjB,OAAO,IAAI,CAACX,IAAI,CAACK,GAAG,CAAC,IAAI,CAACJ,SAAS,GAACU,EAAE,EAAG;MAACL,eAAe,EAAE;IAAI,CAAC,CAAC;EACnE;EAEA;EACAM,UAAUA,CAACJ,KAAS,EAAEG,EAAS;IAC7B,OAAO,IAAI,CAACX,IAAI,CAACa,GAAG,CAAC,IAAI,CAACZ,SAAS,GAACU,EAAE,EAACH,KAAK,EAAG;MAACF,eAAe,EAAE;IAAI,CAAC,CAAC;EACzE;EAEA;EACAQ,MAAMA,CAACH,EAAS;IACd,OAAO,IAAI,CAACX,IAAI,CAACe,MAAM,CAAC,IAAI,CAACd,SAAS,GAACU,EAAE,EAAG;MAACL,eAAe,EAAE;IAAI,CAAC,CAAC;EACtE;EAGA;EACA;EACA;EAEA;EACAU,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAAChB,IAAI,CAACK,GAAG,CAAkB,IAAI,CAACH,aAAa,EAAE;MAACI,eAAe,EAAE;IAAI,CAAC,CAAC;EACpF;EAEA;EACAW,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAACjB,IAAI,CAACK,GAAG,CAAC,IAAI,CAACF,WAAW,EAAE;MAACG,eAAe,EAAE;IAAI,CAAC,CAAC;EACjE;EAEA;EACAY,eAAeA,CAACC,QAAY;IAC1B,OAAO,IAAI,CAACnB,IAAI,CAACS,IAAI,CAAC,IAAI,CAACN,WAAW,EAACgB,QAAQ,EAAG;MAACb,eAAe,EAAE;IAAI,CAAC,CAAC;EAC5E;EAEA;EACAc,WAAWA,CAACT,EAAS;IACnB,OAAO,IAAI,CAACX,IAAI,CAACe,MAAM,CAAC,IAAI,CAACZ,WAAW,GAACQ,EAAE,EAAG;MAACL,eAAe,EAAE;IAAI,CAAC,CAAC;EACxE;;AA5EWR,sBAAsB,C;mBAAtBA,sBAAsB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAtB1B,sBAAsB,C;SAAtBA,sBAAsB;EAAA2B,OAAA,EAAtB3B,sBAAsB,CAAA4B,IAAA;EAAAC,UAAA,EAFrB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}